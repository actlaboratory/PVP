name: Build and release for snapshot

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          architecture: x86
          python-version: 3.8

      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt

      - name: Test
        run: |
          python -m unittest discover test

      - name: Build
        run: |
          python tools\build.py
        env:
          COMMIT_TIMESTAMP: ${{ github.event.head_commit.timestamp}}

      - name: Re-create the tag
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo
            const tagName = repo + "-latestcommit"
            try {
              // Fetch the release by its tag
              const { data: release } = github.rest.repos.getReleaseByTag({ owner, repo, tag: tagName })
              // Delete the release
              github.rest.repos.deleteRelease({ owner, repo, release_id: release.id })
              github.lest.git.deleteRef({owner, repo, ref: "tags/" + tagName})
              github.lest.git.createRef({owner, repo, ref: "refs/tags/" + tagName, sha: context.sha
            } catch (error) {
              console.error(`Error deleting release with tag ${tag_name}: ${error.message}`)
            }


      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}
          path: |
            ./${{ github.event.repository.name }}-*.zip
            ./${{ github.event.repository.name }}-*.json
